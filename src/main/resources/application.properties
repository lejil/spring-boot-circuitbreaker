spring.application.name=spring-boot-circuitbreaker

server.port=8081

management.health.circuitbreakers.enabled=true
management.health.ratelimiters.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

travel.service.url=http://localhost:8080/travelDestinationService

#circuit breaker properties

resilience4j.circuitbreaker.instances.travelDestination.registerHealthIndicator= true
resilience4j.circuitbreaker.instances.travelDestination.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.travelDestination.failureRateThreshold= 60
resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls= 10
#The minimum number of calls required before the circuit breaker can calculate the failure rate or slow call rate.
resilience4j.circuitbreaker.instances.travelDestination.minimum-number-of-calls=20
resilience4j.circuitbreaker.instances.travelDestination.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.travelDestination.waitDurationInOpenState= 30000
#Number of permitted calls when the circuit breaker is half-open to test if the circuit can be closed again.
resilience4j.circuitbreaker.instances.travelDestination.permitted-number-of-calls-in-half-open-state=5
#Size of the sliding window for measuring call outcomes. If count-based, this is the number of calls; if time-based, this is the number of time units.
resilience4j.circuitbreaker.instances.travelDestination.sliding-window-size=5
# Defines whether the sliding window is count-based or time-based. Possible values: COUNT_BASED ,TIME_BASED
resilience4j.circuitbreaker.instances.travelDestination.sliding-window-type=COUNT_BASED


#Rate Limit Properties

resilience4j.ratelimiter.instances.travelAttractions.timeout-duration=2s
#Defines the maximum number of calls (2 requests) that can be executed within a limitRefreshPeriod.
resilience4j.ratelimiter.instances.travelAttractions.limitForPeriod=2
#The interval after which the rate limiter's permissions are refreshed
resilience4j.ratelimiter.instances.travelAttractions.limitRefreshPeriod=10s
resilience4j.ratelimiter.instances.travelAttractions.registerHealthIndicator=true
resilience4j.ratelimiter.instances.travelAttractions.subscribeForEvents=true






